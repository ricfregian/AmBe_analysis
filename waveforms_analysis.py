import uproot
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import awkward as ak

#PLOTSPATH="./plots/allcuts_oldgains_threshold"
#PLOTSPATH="./plots/run4499_stage2_waveforms"
#PLOTSPATH="./plots/test_run4453/waveforms"
#PLOTSPATH="./plots/run4499_stage2_waveforms_orig"
#PLOTSPATH="./plots/test_run4453_threshold_wvs"
PLOTSPATH="./plots/test_morefiles_run4453_threshold_wvs"
DATAPATH="./data"

#file = uproot.open("run4453_p31_p50_test/AmBeFile_TreeMaker_Output_run4453.ntuple.root")
#file = uproot.open("%s/run4453/stage2_run4453/output.root"%(DATAPATH))
#file = uproot.open("%s/oldgains_threshold/run4499.root"%(DATAPATH))
#file = uproot.open("%s/data_AmBe_trigger/PhaseIITreeMaker_run4499_p0_p1.root"%(DATAPATH))
#file = uproot.open("%s/run4499_stage2/PhaseIITreeMaker_run4499.root"%(DATAPATH))
#file = uproot.open("/Users/giancaceresvera/Desktop/tests_run4453/test_run4453_TankAndCTC_withtrigword_withtimingoffset_5ps/PhaseIITreeMaker_run4453_p56_p60.root")
#file = uproot.open("/Users/giancaceresvera/Desktop/tests_run4453/test_run4453_TankAndCTC_allgood_threshold/PhaseIITreeMaker_run4453_p56_p60.root")
file = uproot.open("/Users/giancaceresvera/Desktop/ANNIE/AmBe_source/AmBe_DAQ/data_threshold_for_test/files/allfiles.root")
listofkeys=file.keys()
dictofclasses=file.keys()
classnamesoffile=file.classnames()

print("list of keys in file  ",listofkeys)
print("dict of classes  ",dictofclasses)
print("classnames of file",classnamesoffile)
print("arraw of hitQ",file["phaseIITriggerTree/SiPMhitQ"].array())
print(file["phaseIITriggerTree"])
tree = file["phaseIITriggerTree"]
print("tree keys ", tree.keys())
branches= tree.arrays()
print("branches of a single event ", branches[0].tolist())

print("SiPMhitQ branch  ",branches['SiPMhitQ'])
print("waveforms size branch  ",branches['SiPMwvfm_size'])

charge_arr = tree["SiPMhitQ"].array()
print("charge_arr ", charge_arr)

charge_dum =file["phaseIITriggerTree/SiPMhitQ"].array()
amp_dum =file["phaseIITriggerTree/SiPMhitAmplitude"].array()
print("lenght of charge",len(charge_dum))

#DataFrame
#charge_pd = tree.pd.DataFrame(branches)

selection_mask = branches['SiPMhitQ']<0.1

print('selection of amplitutes ' , branches['SiPMhitAmplitude'][selection_mask])
print('lenselection of amplitutes ' , len(branches['SiPMhitAmplitude'][selection_mask]))
print('sum selection mask ' , np.sum(selection_mask))
print('sum of the 2 elem ' , np.sum(branches['SiPMhitAmplitude'][selection_mask]))

mask_lowcharge = branches['SiPMhitQ']<0.1
mask_highcharge = branches['SiPMhitQ']>0.1
print('number of evetns with low charge : ',np.sum(mask_lowcharge))
print('number of evetns with high charge : ',np.sum(mask_highcharge))
selected_events = branches['SiPMhitAmplitude'][mask_lowcharge] 

mask_highamp = branches ['SiPMhitAmplitude'] > 0.05
mask_mediumcharge = ((branches ['SiPMhitQ'] > 0.1) & (branches ['SiPMhitQ'] < 0.4)) 

plt.hist(ak.flatten(branches['SiPMhitQ']), density=False, alpha=0.8, bins=100, range =(0,0.9) )
plt.xlabel("Charge (nC)", fontsize=20)
plt.savefig('%s/nolog_charge.png'%(PLOTSPATH))
#plt.show()
plt.close()

plt.hist(ak.flatten(branches['SiPMhitQ']), density=False, alpha=0.8, bins=100, range =(0,0.9) )
plt.xlabel("Charge (nC)", fontsize=20)
plt.yscale('log')
plt.savefig('%s/charge.png'%(PLOTSPATH))
#plt.show()
plt.close()

plt.hist(ak.flatten(branches['SiPMhitQ']), density=False, alpha=0.8, bins=100, range =(0,0.9) )
plt.hist(ak.flatten(branches['SiPMhitQ'][mask_lowcharge]), density=False, alpha=0.8, bins=100, range =(0,0.9))
plt.title("Q<0.1 and Q>0.1")
plt.xlabel("Charge (nC)", fontsize=20)
plt.yscale('log')
plt.savefig('%s/cut_charge.png'%(PLOTSPATH))
#plt.show()
plt.close()

plt.hist(ak.flatten(branches['SiPMhitQ']), density=False, alpha=0.8, bins=100, range =(0,0.9) )
plt.hist(ak.flatten(branches['SiPMhitQ'][mask_highamp]), density=False, alpha=0.8, bins=100, range =(0,0.9))
plt.title("Amplitude>0.05")
plt.xlabel("Charge (nC)", fontsize=20)
plt.yscale('log')
plt.savefig('%s/cut_charge_amp.png'%(PLOTSPATH))
#plt.show()
plt.close()

plt.hist(ak.flatten(branches['SiPMpeak_time'][mask_mediumcharge]), density=False, alpha=0.8, bins=300)
#plt.title("Peak time")
plt.xlabel("Peak time (ns)", fontsize=20)
plt.yscale('log')
plt.savefig('%s/peak_time_mediumcharge.png'%(PLOTSPATH))
#plt.show()
plt.close()

plt.hist(ak.flatten(branches['SiPMpeak_time']), density=False, alpha=0.8, bins=300)
#plt.title("Peak time")
plt.xlabel("Peak time (ns)", fontsize=20)
plt.yscale('log')
plt.savefig('%s/peak_time_log.png'%(PLOTSPATH))
#plt.show()
plt.close()

plt.hist(ak.flatten(branches['SiPMhitQ']), density=False, alpha=0.8, bins=100, range =(0,0.9) )
plt.hist(ak.flatten(branches['SiPMhitQ'][mask_mediumcharge]), density=False, alpha=0.8, bins=100, range =(0,0.9))
plt.title("0.1<Q<0.4")
plt.xlabel("Charge (nC)", fontsize=20)
plt.yscale('log')
plt.savefig('%s/cut_charg_mediumcharge.png'%(PLOTSPATH))
#plt.show()
plt.close()

#stacked
#plt.hist([ak.flatten(branches['SiPMhitQ'][mask_lowcharge]),ak.flatten(branches['SiPMhitQ'][mask_highcharge])], density=False, alpha=0.8, bins=100, range =(0,0.9), stacked = True)
#plt.yscale('log')
#plt.show()
plt.close()

fig, ((ax0,ax1,ax2),(ax3,ax4,ax5))= plt.subplots(2,3,figsize=(30,15))
ax0.hist(ak.flatten(branches['SiPMhitAmplitude']), density=False, alpha=0.8, bins=100, range=(-0.1,0.8) )
ax0.set_xlabel('Amplitude (V)',fontsize=20)
#ax1.hist(ak.flatten(branches['SiPMraw_area']), density=False, alpha=0.8, bins=100, range=(-1,700000) ) #orig range
ax1.hist(ak.flatten(branches['SiPMraw_area']), density=False, alpha=0.8, bins=100, range=(-1,700000) )
ax1.set_xlabel('Raw area',fontsize=20)
ax2.hist(ak.flatten(branches['SiPMhitQ']), density=False, alpha=0.8, bins=100, range =(0,0.9))
ax2.ticklabel_format(useOffset=False) # avoid scientific notation in axis
ax2.set_xlabel('Charge',fontsize=20)
ax3.hist(ak.flatten(branches['SiPMpeak_time']), density=False, alpha=0.8, bins=100, range=(0,60000) )
ax3.set_xlabel('Peak time (ns)',fontsize=20)
ax4.hist(ak.flatten(branches['SiPMbaseline']), density=False, alpha=0.8, bins=100, range=(250, 400) )
ax4.set_xlabel('Baseline',fontsize=20)
ax5.hist(ak.flatten(branches['SiPMsigma_baseline']), density=False, alpha=0.8, bins=100, range=(0,10) )
ax5.set_xlabel('Sigma baseline',fontsize=20)
plt.savefig('%s/nocuts.png'%(PLOTSPATH))
#plt.show()
plt.close()

fig, ((ax0,ax1,ax2),(ax3,ax4,ax5))= plt.subplots(2,3,figsize=(30,15))
ax0.hist(ak.flatten(branches['SiPMhitQ']), density=False, alpha=0.8, bins=100, range =(0,0.9))
ax0.ticklabel_format(useOffset=False) # avoid scientific notation in axis
ax0.set_xlabel('Charge',fontsize=20)
ax0.set_yscale('log')
ax1.hist(ak.flatten(branches['SiPMhitAmplitude']), density=False, alpha=0.8, bins=100, range=(-0.1,0.8) )
ax1.set_xlabel('Amplitude (V)',fontsize=20)
ax1.set_yscale('log')
ax2.hist(ak.flatten(branches['SiPMraw_area']), density=False, alpha=0.8, bins=100, range=(-1,700000) )
ax2.set_xlabel('Raw area',fontsize=20)
ax2.set_yscale('log')
ax3.hist(ak.flatten(branches['SiPMpeak_time']), density=False, alpha=0.8, bins=100, range=(0,60000) )
ax3.set_xlabel('Peak time (ns)',fontsize=20)
ax3.set_yscale('log')
ax4.hist(ak.flatten(branches['SiPMbaseline']), density=False, alpha=0.8, bins=100, range=(250, 400) )
ax4.set_xlabel('Baseline',fontsize=20)
ax4.set_yscale('log')
ax5.hist(ak.flatten(branches['SiPMsigma_baseline']), density=False, alpha=0.8, bins=100, range=(0,10) )
ax5.set_xlabel('Sigma baseline',fontsize=20)
ax5.set_yscale('log')
plt.savefig('%s/nocuts_logscale.png'%(PLOTSPATH))
#plt.show()
plt.close()

fig, ((ax0,ax1,ax2),(ax3,ax4,ax5))= plt.subplots(2,3, figsize=(30,15))
ax0.hist(ak.flatten(branches['SiPMhitAmplitude']), density=False, alpha=0.8, bins=100 , range=(-0.1,0.8))
ax0.hist(ak.flatten(branches['SiPMhitAmplitude'][mask_lowcharge]), density=False, alpha=0.8, bins=100 , range=(-0.1,0.8))
ax0.set_yscale('log')
ax0.set_xlabel('Amplitude (V)',fontsize=20)
ax1.hist(ak.flatten(branches['SiPMraw_area']), density=False, alpha=0.8, bins=100 , range=(-1,700000) )
ax1.hist(ak.flatten(branches['SiPMraw_area'][mask_lowcharge]), density=False, alpha=0.8, bins=100 , range=(-1,700000) )
ax1.set_yscale('log')
ax1.set_xlabel('Raw area',fontsize=20)
ax2.hist(ak.flatten(branches['SiPMhitQ']), density=False, alpha=0.8, bins=100, range =(0,0.9))
ax2.hist(ak.flatten(branches['SiPMhitQ'][mask_lowcharge]), density=False, alpha=0.8, bins=100, range =(0,0.9))
#ax2.hist(ak.flatten(branches['SiPMwvfm_size'][mask_lowcharge]), density=False, alpha=0.8, bins=100 )
ax2.ticklabel_format(useOffset=False) # avoid scientific notation in axis
ax2.set_yscale('log')
ax2.set_xlabel('Charge',fontsize=20)
ax3.hist(ak.flatten(branches['SiPMpeak_time']), density=False, alpha=0.8, bins=100 , range=(0,60000))
ax3.hist(ak.flatten(branches['SiPMpeak_time'][mask_lowcharge]), density=False, alpha=0.8, bins=100 , range=(0,60000))
ax3.set_yscale('log')
ax3.set_xlabel('Peak time (ns)',fontsize=20)
ax4.hist(ak.flatten(branches['SiPMbaseline']), density=False, alpha=0.8, bins=100 , range=(250, 400))
ax4.hist(ak.flatten(branches['SiPMbaseline'][mask_lowcharge]), density=False, alpha=0.8, bins=100 , range=(250, 400))
ax4.set_yscale('log')
ax4.set_xlabel('Baseline',fontsize=20)
ax5.hist(ak.flatten(branches['SiPMsigma_baseline']), density=False, alpha=0.8, bins=100 , range=(0,10) )
ax5.hist(ak.flatten(branches['SiPMsigma_baseline'][mask_lowcharge]), density=False, alpha=0.8, bins=100 , range=(0,10) )
ax5.set_yscale('log')
ax5.set_xlabel('Sigma baseline',fontsize=20)
plt.title("Low Charge")
plt.savefig('%s/lowchargecut_logscale.png'%(PLOTSPATH))
#plt.show()
plt.close()

fig, ((ax0,ax1,ax2),(ax3,ax4,ax5))= plt.subplots(2,3, figsize=(30,15))
ax0.hist(ak.flatten(branches['SiPMhitAmplitude']), density=False, alpha=0.8, bins=100 , range=(-0.1,0.8))
ax0.hist(ak.flatten(branches['SiPMhitAmplitude'][mask_lowcharge]), density=False, alpha=0.8, bins=100 , range=(-0.1,0.8))
ax0.set_xlabel('Amplitude (V)',fontsize=20)
ax1.hist(ak.flatten(branches['SiPMraw_area']), density=False, alpha=0.8, bins=100 , range=(-1,700000) )
ax1.hist(ak.flatten(branches['SiPMraw_area'][mask_lowcharge]), density=False, alpha=0.8, bins=100 , range=(-1,700000) )
ax1.set_xlabel('Raw area',fontsize=20)
ax2.hist(ak.flatten(branches['SiPMhitQ']), density=False, alpha=0.8, bins=100, range =(0,0.9))
ax2.hist(ak.flatten(branches['SiPMhitQ'][mask_lowcharge]), density=False, alpha=0.8, bins=100, range =(0,0.9))
#ax2.hist(ak.flatten(branches['SiPMwvfm_size'][mask_lowcharge]), density=False, alpha=0.8, bins=100 )
ax2.ticklabel_format(useOffset=False) # avoid scientific notation in axis
ax2.set_xlabel('Charge',fontsize=20)
ax3.hist(ak.flatten(branches['SiPMpeak_time']), density=False, alpha=0.8, bins=100 , range=(0,60000))
ax3.hist(ak.flatten(branches['SiPMpeak_time'][mask_lowcharge]), density=False, alpha=0.8, bins=100 , range=(0,60000))
ax3.set_xlabel('Peak time (ns)',fontsize=20)
ax4.hist(ak.flatten(branches['SiPMbaseline']), density=False, alpha=0.8, bins=100 , range=(250, 400))
ax4.hist(ak.flatten(branches['SiPMbaseline'][mask_lowcharge]), density=False, alpha=0.8, bins=100 , range=(250, 400))
ax4.set_xlabel('Baseline',fontsize=20)
ax5.hist(ak.flatten(branches['SiPMsigma_baseline']), density=False, alpha=0.8, bins=100 , range=(0,10) )
ax5.hist(ak.flatten(branches['SiPMsigma_baseline'][mask_lowcharge]), density=False, alpha=0.8, bins=100 , range=(0,10) )
ax5.set_xlabel('Sigma baseline',fontsize=20)
plt.title("Low Charge (log)")
plt.savefig('%s/lowchargecut.png'%(PLOTSPATH))
#plt.show()
plt.close()

fig, ((ax0,ax1,ax2),(ax3,ax4,ax5))= plt.subplots(2,3, figsize=(30,15))
ax0.hist(ak.flatten(branches['SiPMhitQ']), density=False, alpha=0.8, bins=100, range =(0,0.9))
ax0.hist(ak.flatten(branches['SiPMhitQ'][mask_mediumcharge]), density=False, alpha=0.8, bins=100, range =(0,0.9))
#ax2.hist(ak.flatten(branches['SiPMwvfm_size'][mask_mediumcharge]), density=False, alpha=0.8, bins=100 )
ax0.ticklabel_format(useOffset=False) # avoid scientific notation in axis
ax0.set_yscale('log')
ax0.set_xlabel('Charge',fontsize=20)
ax1.hist(ak.flatten(branches['SiPMhitAmplitude']), density=False, alpha=0.8, bins=100 , range=(-0.1,0.8))
ax1.hist(ak.flatten(branches['SiPMhitAmplitude'][mask_mediumcharge]), density=False, alpha=0.8, bins=100 , range=(-0.1,0.8))
ax1.set_yscale('log')
ax1.set_xlabel('Amplitude (V)',fontsize=20)
ax2.hist(ak.flatten(branches['SiPMraw_area']), density=False, alpha=0.8, bins=100 , range=(-1,700000) )
ax2.hist(ak.flatten(branches['SiPMraw_area'][mask_mediumcharge]), density=False, alpha=0.8, bins=100 , range=(-1,700000) )
ax2.set_yscale('log')
ax2.set_xlabel('Raw area',fontsize=20)
ax3.hist(ak.flatten(branches['SiPMpeak_time']), density=False, alpha=0.8, bins=100 , range=(0,60000))
ax3.hist(ak.flatten(branches['SiPMpeak_time'][mask_mediumcharge]), density=False, alpha=0.8, bins=100 , range=(0,60000))
ax3.set_yscale('log')
ax3.set_xlabel('Peak time (ns)',fontsize=20)
ax4.hist(ak.flatten(branches['SiPMbaseline']), density=False, alpha=0.8, bins=100 , range=(250, 400))
ax4.hist(ak.flatten(branches['SiPMbaseline'][mask_mediumcharge]), density=False, alpha=0.8, bins=100 , range=(250, 400))
ax4.set_yscale('log')
ax4.set_xlabel('Baseline',fontsize=20)
ax5.hist(ak.flatten(branches['SiPMsigma_baseline']), density=False, alpha=0.8, bins=100 , range=(0,10) )
ax5.hist(ak.flatten(branches['SiPMsigma_baseline'][mask_mediumcharge]), density=False, alpha=0.8, bins=100 , range=(0,10) )
ax5.set_yscale('log')
ax5.set_xlabel('Sigma baseline',fontsize=20)
plt.title("Medium Charge (log)")
plt.savefig('%s/mediumchargecut_logscale.png'%(PLOTSPATH))
#plt.show()
plt.close()

fig, ((ax0,ax1,ax2),(ax3,ax4,ax5))= plt.subplots(2,3, figsize=(30,15))
ax0.hist(ak.flatten(branches['SiPMhitAmplitude']), density=False, alpha=0.8, bins=100 , range=(-0.1,0.8))
ax0.hist(ak.flatten(branches['SiPMhitAmplitude'][mask_mediumcharge]), density=False, alpha=0.8, bins=100 , range=(-0.1,0.8))
ax0.set_xlabel('Amplitude (V)',fontsize=20)
ax1.hist(ak.flatten(branches['SiPMraw_area']), density=False, alpha=0.8, bins=100 , range=(-1,700000) )
ax1.hist(ak.flatten(branches['SiPMraw_area'][mask_mediumcharge]), density=False, alpha=0.8, bins=100 , range=(-1,700000) )
ax1.set_xlabel('Raw area',fontsize=20)
ax2.hist(ak.flatten(branches['SiPMhitQ']), density=False, alpha=0.8, bins=100, range =(0,0.9))
ax2.hist(ak.flatten(branches['SiPMhitQ'][mask_mediumcharge]), density=False, alpha=0.8, bins=100, range =(0,0.9))
#ax2.hist(ak.flatten(branches['SiPMwvfm_size'][mask_mediumcharge]), density=False, alpha=0.8, bins=100 )
ax2.ticklabel_format(useOffset=False) # avoid scientific notation in axis
ax2.set_xlabel('Charge',fontsize=20)
ax3.hist(ak.flatten(branches['SiPMpeak_time']), density=False, alpha=0.8, bins=100 , range=(0,60000))
ax3.hist(ak.flatten(branches['SiPMpeak_time'][mask_mediumcharge]), density=False, alpha=0.8, bins=100 , range=(0,60000))
ax3.set_xlabel('Peak time (ns)',fontsize=20)
ax4.hist(ak.flatten(branches['SiPMbaseline']), density=False, alpha=0.8, bins=100 , range=(250, 400))
ax4.hist(ak.flatten(branches['SiPMbaseline'][mask_mediumcharge]), density=False, alpha=0.8, bins=100 , range=(250, 400))
ax4.set_xlabel('Baseline',fontsize=20)
ax5.hist(ak.flatten(branches['SiPMsigma_baseline']), density=False, alpha=0.8, bins=100 , range=(0,10) )
ax5.hist(ak.flatten(branches['SiPMsigma_baseline'][mask_mediumcharge]), density=False, alpha=0.8, bins=100 , range=(0,10) )
ax5.set_xlabel('Sigma baseline',fontsize=20)
plt.title("Medium Charge")
plt.savefig('%s/mediumchargecut.png'%(PLOTSPATH))
#plt.show()
plt.close()

fig, ((ax0,ax1,ax2),(ax3,ax4,ax5))= plt.subplots(2,3, figsize=(30,15))
ax0.hist(ak.flatten(branches['SiPMhitAmplitude']), density=False, alpha=0.8, bins=100 , range=(-0.1,0.8))
ax0.hist(ak.flatten(branches['SiPMhitAmplitude'][mask_highamp]), density=False, alpha=0.8, bins=100 , range=(-0.1,0.8))
ax0.set_yscale('log')
ax0.set_xlabel('Amplitude (V)',fontsize=20)
ax1.hist(ak.flatten(branches['SiPMraw_area']), density=False, alpha=0.8, bins=100 , range=(-1,700000) )
ax1.hist(ak.flatten(branches['SiPMraw_area'][mask_highamp]), density=False, alpha=0.8, bins=100 , range=(-1,700000) )
ax1.set_yscale('log')
ax1.set_xlabel('Raw area',fontsize=20)
ax2.hist(ak.flatten(branches['SiPMhitQ']), density=False, alpha=0.8, bins=100, range =(0,0.9))
ax2.hist(ak.flatten(branches['SiPMhitQ'][mask_highamp]), density=False, alpha=0.8, bins=100, range =(0,0.9))
#ax2.hist(ak.flatten(branches['SiPMwvfm_size'][mask_highamp]), density=False, alpha=0.8, bins=100 )
ax2.ticklabel_format(useOffset=False) # avoid scientific notation in axis
ax2.set_yscale('log')
ax2.set_xlabel('Charge',fontsize=20)
ax3.hist(ak.flatten(branches['SiPMpeak_time']), density=False, alpha=0.8, bins=100 , range=(0,60000))
ax3.hist(ak.flatten(branches['SiPMpeak_time'][mask_highamp]), density=False, alpha=0.8, bins=100 , range=(0,60000))
ax3.set_yscale('log')
ax3.set_xlabel('Peak time (ns)',fontsize=20)
ax4.hist(ak.flatten(branches['SiPMbaseline']), density=False, alpha=0.8, bins=100 , range=(250, 400))
ax4.hist(ak.flatten(branches['SiPMbaseline'][mask_highamp]), density=False, alpha=0.8, bins=100 , range=(250, 400))
ax4.set_yscale('log')
ax4.set_xlabel('Baseline',fontsize=20)
ax5.hist(ak.flatten(branches['SiPMsigma_baseline']), density=False, alpha=0.8, bins=100 , range=(0,10) )
ax5.hist(ak.flatten(branches['SiPMsigma_baseline'][mask_highamp]), density=False, alpha=0.8, bins=100 , range=(0,10) )
ax5.set_yscale('log')
ax5.set_xlabel('Sigma baseline',fontsize=20)
plt.title("High Amplitude (log)")
plt.savefig('%s/magnitudes_highamp_log.png'%(PLOTSPATH))
#plt.show()
plt.close()

fig, ((ax0,ax1,ax2),(ax3,ax4,ax5))= plt.subplots(2,3, figsize=(30,15))
ax0.hist(ak.flatten(branches['SiPMhitAmplitude']), density=False, alpha=0.8, bins=100 , range=(-0.1,0.8))
ax0.hist(ak.flatten(branches['SiPMhitAmplitude'][mask_highamp]), density=False, alpha=0.8, bins=100 , range=(-0.1,0.8))
ax0.set_xlabel('Amplitude (V)',fontsize=20)
ax1.hist(ak.flatten(branches['SiPMraw_area']), density=False, alpha=0.8, bins=100 , range=(-1,700000) )
ax1.hist(ak.flatten(branches['SiPMraw_area'][mask_highamp]), density=False, alpha=0.8, bins=100 , range=(-1,700000) )
ax1.set_xlabel('Raw area',fontsize=20)
ax2.hist(ak.flatten(branches['SiPMhitQ']), density=False, alpha=0.8, bins=100, range =(0,0.9))
ax2.hist(ak.flatten(branches['SiPMhitQ'][mask_highamp]), density=False, alpha=0.8, bins=100, range =(0,0.9))
#ax2.hist(ak.flatten(branches['SiPMwvfm_size'][mask_highamp]), density=False, alpha=0.8, bins=100 )
ax2.ticklabel_format(useOffset=False) # avoid scientific notation in axis
ax2.set_xlabel('Charge',fontsize=20)
ax3.hist(ak.flatten(branches['SiPMpeak_time']), density=False, alpha=0.8, bins=100 , range=(0,60000))
ax3.hist(ak.flatten(branches['SiPMpeak_time'][mask_highamp]), density=False, alpha=0.8, bins=100 , range=(0,60000))
ax3.set_xlabel('Peak time (ns)',fontsize=20)
ax4.hist(ak.flatten(branches['SiPMbaseline']), density=False, alpha=0.8, bins=100 , range=(250, 400))
ax4.hist(ak.flatten(branches['SiPMbaseline'][mask_highamp]), density=False, alpha=0.8, bins=100 , range=(250, 400))
ax4.set_xlabel('Baseline',fontsize=20)
ax5.hist(ak.flatten(branches['SiPMsigma_baseline']), density=False, alpha=0.8, bins=100 , range=(0,10) )
ax5.hist(ak.flatten(branches['SiPMsigma_baseline'][mask_highamp]), density=False, alpha=0.8, bins=100 , range=(0,10) )
ax5.set_xlabel('Sigma baseline',fontsize=20)
plt.title("High Amplitude")
plt.savefig('%s/magnitudes_highamp.png'%(PLOTSPATH))
#plt.show()
plt.close()

